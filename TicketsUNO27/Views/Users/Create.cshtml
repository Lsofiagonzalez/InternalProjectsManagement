@model Core.Models.User.Users

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Layouts/Dashboard.cshtml";
}

@{
    ViewBag._Active = "Create";
    ViewBag._Panel = "Create";
}
<div class=" segment">
    <h1 class="ui header" align="center">
        <div class="content">
            <h1>Módulo Creación de Usuarios</h1>
            <div class="sub header" align="right">
                <div class="ui breadcrumb">
                    <a class="section" href="@Url.Action("home","Home")">Inicio</a>
                    <div class="divider"> / </div>
                    <a class="section" href="@Url.Action("Index")">Listar</a>
                    <div class="divider"> / </div>
                    <div class="active section">Módulo Creación de Usuarios</div>
                </div>
            </div>
        </div>

    </h1>
    <div class="ui hidden divider"></div>

</div>

<br />

<div class="ui grid">
    <div class="one wide column"></div>
    <div class="fourteen wide column">
        <div class="ui segments">
            <div class="ui teal segment">
                <form method="post" action="Create" enctype="multipart/form-data" class="auto ui large form">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">

                        <div class="field">
                            @Html.LabelFor(model => model.UserName, "Nombres", htmlAttributes: new { @class = "" })

                            <div class="ui mini icon input">
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "" } })
                                <i class="keyboard outline outline icon"></i>
                            </div>
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "ui error message" })
                        </div>

                        <div class="field">
                            @Html.LabelFor(model => model.LastName, "Apellidos", htmlAttributes: new { @class = "" })

                            <div class="ui mini icon input">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "" } })
                                <i class="keyboard outline outline icon"></i>
                            </div>
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "ui error message" })
                        </div>

                        <div class="field">
                            @Html.LabelFor(model => model.NumberPhone, "Numero de Contacto", htmlAttributes: new { @class = "" })

                            <div class="ui mini icon input">
                                @Html.EditorFor(model => model.NumberPhone, new { htmlAttributes = new { @class = "" } })
                                <i class="keyboard outline outline icon"></i>
                            </div>
                            @Html.ValidationMessageFor(model => model.NumberPhone, "", new { @class = "ui error message" })
                        </div>

                        <div class="field">
                            @Html.LabelFor(model => model.CC, htmlAttributes: new { @class = "" })

                            <div class="ui mini icon input">
                                @Html.EditorFor(model => model.CC, new { htmlAttributes = new { @class = "" } })
                                <i class="keyboard outline outline icon"></i>
                            </div>

                            @Html.ValidationMessageFor(model => model.CC, "", new { @class = "ui error message" })
                        </div>

                        <div class="field">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "" })

                            <div class="ui mini icon input">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "" } })
                                <i class="keyboard outline outline icon"></i>
                            </div>

                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "ui error message" })
                        </div>

                        <div class="field">
                            @Html.LabelFor(model => model.RolId, "RolId", htmlAttributes: new { @class = "" })

                            @Html.DropDownList("RolId", null, "Sin Seleccionar", htmlAttributes: new { @class = "ui search selection dropdown" })
                            @Html.ValidationMessageFor(model => model.RolId, "", new { @class = "ui error message" })
                        </div>

                        <div class="field" hidden>
                            @Html.LabelFor(model => model.UpdatedByName, htmlAttributes: new { @class = "" })

                            <div class="ui mini icon input">
                                @Html.EditorFor(model => model.UpdatedByName, new { htmlAttributes = new { @class = "" } })
                                <i class="keyboard outline outline icon"></i>
                            </div>

                            @Html.ValidationMessageFor(model => model.UpdatedByName, "", new { @class = "ui error message" })
                        </div>

                        <label for="ejemplo">Escoja el archivo</label>
                        <input type="file" class="form-control-file" name="file" id="file">
                        <button type="submit" class="btn btn-info">
                            Subir
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

