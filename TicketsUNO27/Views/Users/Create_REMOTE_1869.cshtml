@model Core.Models.User.Users

@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Layouts/Dashboard.cshtml";
}

    <div class=" segment">
        <h1 class="ui header">
            <img src="~/Content/images/helpdesk.png">
            <div class="content">
                Módulo  de creación de Users
                <div class="sub header">
                    <div class="ui breadcrumb">
                        <a class="section" href="@Url.Action("HomeAdmin","Home")">Inicio</a>
                        <div class="divider"> / </div>
                        <a class="section" href="@Url.Action("Index")">Listar</a>
                        <div class="divider"> / </div>
                        <div class="active section" style="text-transform:lowercase">Creación de Users</div>
                    </div>
                </div>
            </div>

        </h1>
        <div class="ui hidden divider"></div>

    </div>

    <h4 class="ui horizontal divider header">
        <button class="ui  large red submit button">
            <i class="computer icon"></i>
            CREAR Users
        </button>

    </h4>


    <div class="ui grid">
        <div class="one wide column"></div>
        <div class="fourteen wide column">
            <div class="ui segments">
                <div class="ui teal segment">
                    @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "ui large form", autofocus = "" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="field">
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "" })

                            <div class="ui mini icon input">
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "" } })
                                <i class="keyboard outline outline icon"></i>
                            </div>



                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "ui error message" })
                        </div>

                        <div class="field">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "" })

                            <div class="ui mini icon input">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "" } })
                                <i class="keyboard outline outline icon"></i>
                            </div>



                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "ui error message" })
                        </div>

                        <div class="field">
                            @Html.LabelFor(model => model.NumberPhone, htmlAttributes: new { @class = "" })

                            <div class="ui mini icon input">
                                @Html.EditorFor(model => model.NumberPhone, new { htmlAttributes = new { @class = "" } })
                                <i class="keyboard outline outline icon"></i>
                            </div>



                            @Html.ValidationMessageFor(model => model.NumberPhone, "", new { @class = "ui error message" })
                        </div>

                        <div class="field">
                            @Html.LabelFor(model => model.CC, htmlAttributes: new { @class = "" })

                            <div class="ui mini icon input">
                                @Html.EditorFor(model => model.CC, new { htmlAttributes = new { @class = "" } })
                                <i class="keyboard outline outline icon"></i>
                            </div>



                            @Html.ValidationMessageFor(model => model.CC, "", new { @class = "ui error message" })
                        </div>

                        <div class="field">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "" })

                            <div class="ui mini icon input">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "" } })
                                <i class="keyboard outline outline icon"></i>
                            </div>



                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "ui error message" })
                        </div>

                        <div class="field">
                            Role

                            @Html.DropDownList("RolId", null, "Sin Seleccionar", htmlAttributes: new { @class = "ui search selection dropdown" })
                            @Html.ValidationMessageFor(model => model.RolId, "", new { @class = "ui error message" })
                        </div>

                        @*<div class="field">
                            @Html.LabelFor(model => model.CreatedByName, htmlAttributes: new { @class = "" })

                            <div class="ui mini icon input">
                                @Html.EditorFor(model => model.CreatedByName, new { htmlAttributes = new { @class = "" } })
                                <i class="keyboard outline outline icon"></i>
                            </div>



                            @Html.ValidationMessageFor(model => model.CreatedByName, "", new { @class = "ui error message" })
                        </div>*@

                        @*<div class="field">
                            @Html.LabelFor(model => model.UpdatedByName, htmlAttributes: new { @class = "" })

                            <div class="ui mini icon input">
                                @Html.EditorFor(model => model.UpdatedByName, new { htmlAttributes = new { @class = "" } })
                                <i class="keyboard outline outline icon"></i>
                            </div>

                            @Html.ValidationMessageFor(model => model.UpdatedByName, "", new { @class = "ui error message" })
                        </div>*@


                        <div class="field">
                            <br />
                            <input type="submit" value="Crear" class="ui  large red submit button" />
                            @Html.ActionLink("Regresar", "Index", null, new { @class = "ui button" })
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

</body>
</html>
